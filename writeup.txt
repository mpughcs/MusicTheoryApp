The beginnings of my project Notation started simply as a small codebase that explored various features of the rust programming language. Being new to rust, the first month or so was spent trying to learn basic understanding of the language and its features. 
I chose to focus my project around the idea of a music notation library, as I had a strong interest in music and music theory. At first, I was primarily interested in making a code library that could be used experimentally for almost a type of musical scripting, but I quickly saw the utility in making a client application that could be used to create music notation.
The project then shifted to focus on the client application, and I began to think of the various features that I wanted to include. I started by exploring what currently existed as far as music theory libraries for rust. I found one library aptly named Rust Music Theory and imported the crate to begin testing out it's features.
This is where I learned the most about rust, as I found the usage of the library completely unintuitive. It took me many hours of reading rust documentation to get a working prototype which I then submitted as milestone I. The prototype was simple in it's functionality, though it laid the important groundwork for the rest of project. 
The original prototype was able to take a key center and name of a musical scale, and then generate a list of notes in that scale. This was a very basic feature, but it was the first time I had successfully used a rust library in a project.


The prototype was extended based on features that I deemed critical to efficient musical notation. Primarily, I used Rust's module system to create a module that was designed to process chord progressions. This again was a large challenge in my understanding of rust as a language because of how different rust's package management system is from those I'm more familiar with like C++ classes. I also developed features that allowed for the encoding of chord progressions of scales into carefully formatted .txt files. The biggest challenge I faced outside of learning rust was achieving my goal of this project being able to produce audible notes, as I find working with music purely theoretically thoroughly uninspiring. 

To solve this problem, I wrote a kind of musical interpreter in Python, that would take the .txt files produced by the rust code and convert them into a .mid file, which is a standard format for storing musical notation. This was a very informative process, as I was realized what else besides the names of notes would be required to encode a musical piece. I also learned a lot about the MIDI format, which is a very complex and interesting format for storing musical notation.